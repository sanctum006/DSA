bool canPartition(vector<int>& nums) {
        
        int sum = 0;
        
        int n = nums.size();
        
        for (int i = 0; i < n; i++)
            sum += nums[i];
            
        if (sum & 1) return 0;
        
        vector<vector<int>> dp(n + 1, vector<int> (sum/2 + 1, -1));
        
        int target = sum/2;
        
        for (int i = 0; i <= n; i++)
            dp[i][0] = 1;
        
        for (int j = 1; j <= target; j++)
            dp[0][j] = 0;
            
        for (int i = 1; i <= n; i++) {
            for (int j = 1; j <= target; j++) {
                if (nums[i - 1] > j)
                    dp[i][j] = dp[i - 1][j];
                else
                    dp[i][j] = dp[i - 1][j - nums[i - 1]] || dp[i - 1][j];
            }
        }

        return dp[n][target];
    }