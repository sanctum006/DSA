Search a sorted array by repeatedly dividing the search interval in half. Begin with an interval covering the whole array. If the value of the search key is less than
the item in the middle of the interval, narrow the interval to the lower half. Otherwise, narrow it to the upper half.

The time Complexity is O(NLogN).

int binarySearch(int arr, int target, int start, int end) {
      while (start <= end) {
	   int mid = (start + end) / 2;
           if (arr[mid] == target)
		return mid;
	   else if (arr[mid] > target)
		start = mid - 1;
	   else if (arr[mid] < target)
		end = mid + 1;
      }

      return 0;
}

Note: mid = (start + end) / 2 = (2 * start + end - start) / 2 = start + (end - start) / 2;